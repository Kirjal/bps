@import url("./constants/variables.css");
@import url("./assets/styles/components/bubble-container.css");
@import url("./assets/styles/components/header.css");
@import url("./assets/styles/components/footer.css");
@import url("./assets/styles/components/contact-button.css");
@import url("./assets/styles/views/content.css");
@import url("./assets/styles/views/contact.css");

/***** CSS RESET ***************************/

*, *::before, *::after{
  box-sizing: border-box;
}
a{
  text-decoration: none;
}
*{
  margin: 0;
}
button{
  border: 0;
  box-shadow: none;
}
body {
  line-height: 1.5; /* helps with dyslexia */
  -webkit-font-smoothing: antialiased; /* thanks macOS, for apparently still using subpixel antialiasing that makes text blurry */
}
img, picture, video, canvas, svg {
  display: block; /* much prefer having these as blocks, instead of inline elements */
}
input, button, textarea, select {
  font: inherit; /* prevent these elements from not behaving wrong with fonts */
}
p, h1, h2, h3, h4, h5, h6 {
  overflow-wrap: break-word; /* no overflow from long words in a tight container */
  hyphens: auto;
}
p {
  text-wrap: pretty; /* ensures the final line contains at least two words to avoid cases of a paragraph ending with a very small word or character */
}
h1, h2, h3, h4, h5, h6 {
  line-height: 1.2; /* doesn't require 1.5 to help with dyslexia, as headers should not be 27 lines high */
  text-wrap: balance; /* balances the width of multiple lines of text */
}
#root {
  isolation: isolate; /* #root being the base div of react, this should prevent stacking context bugs and avoid z-index checks with modals, dropdowns, tooltips... */
}

/*********************************************/
.App{
  font-family: Helvetica, Verdana, Tahoma, sans-serif;
  font-size: 1em;
  color: var(--base-text);
  background-color: var(--background);
  overflow-x: hidden;
  height: 100vh;
}

header, main, footer{
  position: relative;
}

header{
  z-index: 2;
}

footer{
  z-index: 1;
}

main{
  min-width: 320px;
  width: 90%;
  max-width: 1200px;
  margin: auto;
  padding-top: 170px;
}

li{
  list-style: none;
}

ul{
  padding: 0;
}

.yellow-line{
  background-color: var(--bps-yellow);
}
.blue-line{
  background-color: var(--bps-light-blue);
}

.header-gradient{
  background: var(--header-gradient);
}
.footer-gradient{
  background: var(--footer-gradient);
}

/* transition on <main> when changing pages */

main{
  opacity: 1;
  left: 0;
}

main.hidden{
  opacity: 0;
}

main.transition{
  transition: all 0.6s;
}

main.left{
  left: -200px;
}

.title-fade{
  display: none;
}

.title-outline{
  height: 100%;
  width: 100%;
  position: absolute;
  bottom: 0;
  right: 0;
  border-radius: 0 200px 200px 0;
  box-shadow: inset -3px -5px var(--title-outline);
}

@media screen and (min-width: 769px){
  main{
    width: 95%;
  }
}

/** stuff that was there by default from react ***********************************************/

/*.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}*/
